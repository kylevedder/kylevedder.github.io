{"name":"Kylevedder.GitHub.io","tagline":"Website for my Github account!","body":"### Welcome to My GitHub Homepage!\r\nHi, my name is Kyle Vedder and I am a freshman at UMass Amherst. I like to code and learn new things. Check out my list of some of the projects that I made. If you would like to know more about me, you can read my [resume](http://people.umass.edu/kvedder/resume) or e-mail me at [kvedder@umass.edu](mailto:kvedder@umass.edu).\r\n\r\n### List of Cool Projects\r\nHere is a short list of some of the cool projects I've created:\r\n\r\n|Project|Description|\r\n|:-----|:---------|\r\n|[cisco-assignment](https://github.com/kylevedder/cisco-assignment)|This was a programming challenge from Cisco-Startup designed to test my ability to write production quality code in a time-boxed environment while learning new technologies. I am very pleased with how this project turned out and it also introduced me to Spring Boot/Web/MVC, frameworks which I now love to use.|\r\n|[physics-engine](https://github.com/kylevedder/PhysicsEngine)|This is a 2D physics engine I wrote for use in several of the other games I created as well as for use in a robot simulator I developed to test code. I learned a lot about how game engines work and about the benefits and shortcomings of different collision detection methods.|\r\n|[KChatClient](https://github.com/kylevedder/KChatClient)|This is a chat client I wrote while learning about socket programming and multi-threading. This was my first foray into the world of multi-threaded design and I learned a lot of new design patterns|\r\n|[KChatServer](https://github.com/kylevedder/KChatServer)|This is the server counterpart to the above mentioned [KChatClient](https://github.com/kylevedder/KChatClient).|\r\n|[EmailTrackerBackend](https://github.com/kylevedder/EmailTrackerBackEnd)|This is a service for tracking views on emails via images. This service provides a 1x1 white image to embed into emails that is fetched every time the email is loaded. When fetching the image, the request includes a unique ID which will increment a view counter in a database. This view counter can then be read through a GET request to the counter endpoint. I learned a lot about working with databases without and ORM and implementing RESTful APIs through this project. I also learned that without any framework to take care of the boilerplate, there is a lot of code to implement such a simple task.|\r\n\r\n### Future Projects\r\nI am always doing new cool and weird things with code! Be sure to look for them here and the many organization pages of which I am a part.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}